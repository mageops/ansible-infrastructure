##################################################
#                                                #
#   ------------ MageOps Defaults ------------   #
#                                                #
##################################################


# -------------------------------
# --------  AWS General  --------
# -------------------------------

# Is this env hosted on AWS?
aws_use: no

# Region where the env will be hosted
aws_region: eu-central-1

# The preferred AZ to use - Set automatically to the first one if not defined
# aws_preferred_availability_zone:

# Force fresh custom AWS gathering
aws_facts_force_fresh: no

# ---------------------------
# --------  AWS IAM  --------
# ---------------------------

# Prefix for naming IAM resources
aws_iam_name_prefix: MageOps

# Define this variable if you want to be able to switch to this account
# from your master account using the employee access roles.
# aws_iam_master_account_id:

# IAM roles that need to be in global vars because they are used across roles
# You almost never need to override this unless to keep backwards compat
aws_iam_role_shopware: "{{ aws_iam_name_prefix }}AppNode"

# ----------------------------
# --------  AWS Tags  --------
# ----------------------------

# A set of tags that uniquely identifies AWS resources
# belonging to the specific environment.
aws_tags_base:
  Project: "{{ mageops_project }}"
  Environment: "{{ mageops_environment }}"

# Additional tags to be applied during automated provisioning
aws_tags_meta:
  Tool: ansible

# Any extra tags that can be applied as needed
aws_tags_extra: []

aws_tags_details:
  Infrastructure: mageops
  AppId: "{{ mageops_shopware_name }}"


# All environment-scoped tags to be applied when *creating* resources
aws_tags_default: "{{ aws_tags_base|combine(aws_tags_meta, aws_tags_details, aws_tags_extra) }}"

# ---  General traits that specify a subgroup or special treatment  ---

# All nodes constructed out of pre-baked image (AMI in this case) must have
# this tag to avoid provisioning them. All nodes in ASG will have this trait.
aws_tags_trait_immutable:
  TraitImmutable: "immutable"

# ---  General tags indicating resource role  ---

# --- APP ---

aws_tags_role_app_base:
  Role: "app"

aws_tags_role_shopware:
  Role: "shopware"

# -----------------------
# --------  AMI  --------
# -----------------------

# AMI Name search pattern matching official Rocky linux 9 Marketplace AMI
# Warning! You need to be subscribed to it first!
aws_ami_base_marketplace_name: "Rocky-9-EC2-Base-*"

# Whether to kill previously created builder or reuse it on next run
aws_ami_build_force_fresh_builder: no

# Always rebuild ami starting from fresh base image
aws_ami_force_clean_build: no

# Whether to terminate the builder instance after AMI is created
aws_ami_build_terminate_builder: yes

# -------------------------------
# --------  AWS Network  --------
# -------------------------------

# Create a dedicated network?
aws_vpc_create: yes

# Prefix to use for the subnet, must be unique across projects if you
# plan on doing any peering between their networks
aws_vpc_subnet_prefix: "10.9"

# Or reuse an existing one
# aws_vpc_id:

# VPC name for identification purposes
aws_vpc_name: "{{ mageops_shopware_name }}"

# Extra routes for the VPC
aws_vpc_routes_extra: []


aws_security_group_shopware_name: "{{ mageops_shopware_name }}-shopware-sg"

# ---------------------------
# --------  AWS EC2  --------
# ---------------------------

# Common application identifier used for namespacing resources
mageops_shopware_name: "{{ mageops_prefix }}-{{ mageops_project }}-{{ mageops_environment }}"

# The (global) default volume type to use
aws_ec2_ebs_volume_type: gp3

# Whether to convert existing volumes of non-autoscaled instances
aws_ec2_ebs_gp3_convert: yes

# Provision 3k IOPS for gp3 volumes - (baseline - no extra fees)
aws_ec2_ebs_gp3_iops: 3000

# Provision 125MB/s throughput for gp3 volumes (baseline - no extra fees)
aws_ec2_ebs_gp3_throughput: 125

# Enable data encryption
mageops_encryption: no

# EBS encryption
mageops_ebs_encrypt: "{{ mageops_encryption }}"


# You may also override the above defaults for specific node types

#   aws_varnish_node_ebs_volume_type: ~
#   aws_varnish_node_ebs_gp3_convert: ~
#   aws_varnish_node_ebs_gp3_iops: ~
#   aws_varnish_node_ebs_gp3_throughput: ~

#   aws_persistent_node_ebs_volume_type: ~
#   aws_persistent_node_ebs_gp3_convert: ~
#   aws_persistent_node_ebs_gp3_iops: ~
#   aws_persistent_node_ebs_gp3_throughput: ~

#   aws_builder_node_ebs_volume_type: ~
#   aws_builder_node_ebs_gp3_convert: ~
#   aws_builder_node_ebs_gp3_iops: ~
#   aws_builder_node_ebs_gp3_throughput: ~

#   aws_ami_build_ebs_volume_type: ~
#   aws_ami_build_ebs_gp3_iops: ~
#   aws_ami_build_ebs_gp3_throughput: ~

# The key has to be manually generated in the console and the name
# has to agree with this setting.
aws_ec2_ssh_key_name: "{{ mageops_shopware_name }}"

# User data to add to every EC2 instance / Launch configuration
# As a default configuration for compatibility reasons it changes
# the default user to `ec2-user` just like Amazon Linux AMIs.
#
# The cloud config has to be supported by base AMI for this to work
# - official CentOS 7 images do.
#
aws_ec2_instance_user_data: |
  Content-Type: multipart/mixed; boundary="//"
  MIME-Version: 1.0

  --//
  Content-Type: text/cloud-config; charset="us-ascii"
  MIME-Version: 1.0
  Content-Transfer-Encoding: 7bit
  Content-Disposition: attachment; filename="cloud-config.txt"

  #cloud-config
  disable_root: false
  users:
    - name: root
      ssh_redirect_user: false

  --//
  Content-Type: text/x-shellscript; charset="us-ascii"
  MIME-Version: 1.0
  Content-Transfer-Encoding: 7bit
  Content-Disposition: attachment; filename="userdata.txt"

  #!/bin/bash

  /bin/echo "Hello creativestyle!" >> /tmp/creativestyle.txt

  {{ aws_ec2_instance_user_launch_script_custom }}
  {{ aws_ec2_user_launch_script | default('') }}

  --//

# Launch script to execute on every EC2 instance start
# Do not override `ec2_instance_user_launch_script`
# as it's used to customize the script in roles.
aws_ec2_instance_user_launch_script_custom: ''


# ---------------------------------
# --------  Trusted CIDRs  --------
# ---------------------------------

# - pass-through basic site password protections
# - can connect via ssh
# - easier life everywhere

mageops_trusted_cidr_blocks_global: []
mageops_trusted_cidr_blocks_extra: []

mageops_trusted_cidr_blocks: "{{ mageops_trusted_cidr_blocks_global + mageops_trusted_cidr_blocks_extra }}"

# ------------------------------------------
# --------  SSH Key Authorizations  --------
# ------------------------------------------

# This vars should be set in global company-wide settings
mageops_root_ssh_keys_global: []
mageops_app_ssh_keys_global: []

# SSH keys to authorize for root access to nodes customizable per project
mageops_root_ssh_keys_project: []

# SSH keys to authorize for access to app user customizable per project
mageops_app_ssh_keys_project: []

# Final runtime SSH authorized keys lists
mageops_root_ssh_keys: "{{ mageops_root_ssh_keys_global + mageops_root_ssh_keys_project }}"
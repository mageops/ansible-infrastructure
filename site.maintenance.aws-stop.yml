
- hosts: localhost
  connection: local
  roles:
    - role: cs.aws-region-facts
    - role: cs.aws-vpc-facts

  tasks:
    - name: Scale down all App Node ASGs
      when: stop_asg
      block:
        - name: Get App Node Auto Scaling Groups
          ec2_asg_facts:
            region: "{{ aws_region }}"
            tags: "{{ aws_tags_base | combine(aws_tags_role_app) }}"
          register: stop_asg_facts

        - name: Scale down ASG to zero
          ec2_asg:
            name: "{{ item.name }}"
            launch_config_name: "{{ item.lc }}"
            region: "{{ aws_region }}"
            state: present
            desired_capacity: 0
            min_size: 0
            wait_for_instances: no
          with_items: "{{ stop_asgs }}"
          vars:
            stop_asgs: "{{ stop_asg_facts | json_query('results[].{ name: auto_scaling_group_name, lc: launch_configuration_name}') }}"

    - name: Stop standalone EC2 instances
      when: stop_ec2
      block:
        - name: Get list of EC2 instances
          ec2_instance_info:
            region: "{{ aws_region }}"
            filters:
              "vpc-id": "{{ aws_vpc_id }}"
          register: stop_ec2_instance_info

        - name: Stop instances
          ec2:
            instance_ids: "{{ stop_ec2_instance_ids }}"
            region: "{{ aws_region }}"
            state: stopped
            wait: no
          vars:
            stop_ec2_instance_ids: "{{ stop_ec2_instance_info | json_query('instances[].instance_id') }}"
  vars:
    stop: yes
    stop_ec2: "{{ stop }}"
    stop_asg: "{{ stop }}"

- name: Create RDS subnet group
  rds_subnet_group:
    state: present
    region: "{{ aws_region }}"
    name: "{{ aws_rds_subnet_group_name }}"
    description: "{{ aws_rds_subnet_group_name }}"
    subnets: "{{ aws_rds_subnet_group_subnets }}"

- name: Create RDS parameter group
  rds_param_group:
    state: present
    region: "{{ aws_region }}"
    name: "{{ aws_rds_param_group_name }}"
    description: "{{ aws_rds_param_group_desc }}"
    engine: "{{ aws_rds_param_group_engine }}"
    tags: "{{ aws_tags_default }}"
    params: "{{ aws_rds_param_group_params | default(omit) }}"

- name: Create RDS encryption key
  aws_kms:
    alias: "{{ aws_rds_encryption_key_name }}"
    region: "{{ aws_region }}"
    tags: "{{ aws_tags_default | combine(aws_tags_kms_database) }}"
  when: aws_rds_storage_encrypt and aws_rds_dedicated_encryption_key

- name: Create MySQL/MariaDB RDS
  rds_instance:
    region: "{{ aws_region }}"
    publicly_accessible: true
    db_instance_identifier: "{{ aws_rds_instance_name }}"
    engine: "{{ aws_rds_db_engine }}"
    db_parameter_group_name: "{{ aws_rds_param_group_name }}"
    engine_version: "{{ aws_rds_db_engine_version }}"
    allocated_storage: "{{ aws_rds_storage_size }}"
    db_instance_class: "{{ aws_rds_instance_type }}"
    master_username: "{{ mageops_mysql_root_user }}"
    master_user_password: "{{ mageops_mysql_root_pass }}"
    db_subnet_group_name: "{{ aws_rds_subnet_group_name }}"
    vpc_security_group_ids:
     - "{{ aws_rds_security_groups }}"
    backup_retention_period: "{{ aws_rds_backup_retention }}"
    preferred_backup_window: "{{ aws_rds_backup_window }}"
    preferred_maintenance_window: "{{ aws_rds_maintenance_window }}"
    auto_minor_version_upgrade: "{{ aws_rds_auto_minor_version_upgrade }}"
    allow_major_version_upgrade: "{{ aws_rds_allow_major_version_upgrade }}"
    tags: "{{ aws_tags_default | combine(aws_tags_role_database, aws_tags_role_mysql_database, aws_tags_node_mysql) }}"
    availability_zone: "{{ aws_rds_availability_zone }}"
    storage_encrypted: "{{ aws_rds_storage_encrypt }}"
    kms_key_id: "{{ aws_rds_encryption_key_name if aws_rds_storage_encrypt and aws_rds_dedicated_encryption_key else omit }}"
    performance_insights_kms_key_id: "{{ aws_rds_encryption_key_name if aws_rds_storage_encrypt and aws_rds_dedicated_encryption_key else omit }}"
    wait: yes

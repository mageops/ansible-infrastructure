# IMPORTANT! Read on how to use this process!
#
# This task list removes any nginx conf.d configs which were not
# provisioned during this run - which are not listed in the
# fact `nginx_provisioned_confd_files`.
#
# Note: The paths shall be relative to /etc/nginx/conf.d dir.
#
# After any of your role adds new configs into /etc/nginx/conf.d it should
# register them by extending this fact and calling this cleanup.
#
# You should do this before reloading nginx as any leftover configs
# may prevent nginx from starting.
#
# EXAMPLE usage:
#
#    - name: Register provisioned nginx configs
#      set_fact:
#        nginx_provisioned_confd_files: "{{ nginx_provisioned_confd_files + nginx_role_provisioned_nginx_confd_files }}"
#      vars:
#        nginx_role_provisioned_nginx_confd_files:
#          - 005-map-something.conf
#          - 094-some-vhost.conf
#
#    - name: Remove deprecated nginx configs not added in this run
#      include_role:
#        name: cs.nginx
#        tasks_from: 099-cleanup.yml
#
# ALTERNATIVELY you may notify the cleanup handler after your file updates:
#
#    - name: Configure vhost
#      template:
#         src: vhost.conf.j2
#         dest: /etc/nginx/conf.d/090-main-vhost.conf
#      notify: Reload nginx configs
#
#    - name: Register provisioned nginx configs
#      set_fact:
#        nginx_provisioned_confd_files: "{{ nginx_provisioned_confd_files + ['090-main-vhost.conf'] }}"
#
#    - name: Perform nginx config cleanup and reload at once
#      meta: flush_handlers


- name: Find existing nginx conf.d files
  find:
    paths: "{{ nginx_confd_dir }}"
    recurse: yes
    follow: yes
    file_type: file
    patterns: '*.conf'
  register: nginx_installed_confd_files_find

- name: Set list of nginx conf.d files to remove
  set_fact:
    nginx_provisioned_confd_files: "{{ nginx_provisioned_confd_files }}"
    nginx_installed_confd_files: "{{ nginx_installed_confd_files }}"
    nginx_deprecated_confd_files: "{{ nginx_installed_confd_files | difference(nginx_provisioned_confd_files) }}"
  vars:
    nginx_provisioned_confd_files: "{{ nginx_provisioned_confd_files | unique }}"
    nginx_installed_confd_files: >-
      {{
        nginx_installed_confd_files_find.files
            | sort(attribute='path')
            | map(attribute='path')
            | map('regex_replace', '^' ~ nginx_confd_dir | regex_escape, '')
            | map('regex_replace', '^/*', '')
            | list
      }}

- name: Print readable information about files that will be removed
  when: nginx_deprecated_confd_files | length > 0
  debug:
    msg: |
      =============================================
      ==     Deprecated nginx configs cleanup    ==
      =============================================

      Auto-included config dirs: {{ nginx_confd_dir }}

      Configs present on the host:
      {{ nginx_installed_confd_files | to_nice_yaml }}

      Currently provisioned - will be KEPT:
      {{ nginx_provisioned_confd_files | to_nice_yaml }}

      Deprecated configs - will be REMOVED:
      {{ nginx_deprecated_confd_files | to_nice_yaml }}

- name: Remove deprecated nginx conf.d files
  file:
    name: "{{ nginx_confd_dir }}/{{ filename }}.conf"
    state: absent
  loop: "{{ nginx_deprecated_confd_files }}"
  loop_control:
    label: "{{ nginx_confd_dir }}/{{ filename }}"
    loop_var: filename
  notify: Reload nginx

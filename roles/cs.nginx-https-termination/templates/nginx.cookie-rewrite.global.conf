# ---  [BEGIN] Cookie rewrite maps [BEGIN]  ---
# Note: We cannot use the "if" directive as it does not work properly inside location block
# so instead we map to the new Set-Cookie value if cookie has non-zero length (via ".+" regexp).
# This way, later in the location block cookie will be set if the new $MAGEOPS_COOKIE_REWRITE_*
# variable is not empty and will be skipped otherwise (empty valued headers are skipped).

# $MAGEOPS_COOKIE_REWRITE_DOMAIN is used to decide what domain use for current hostname

{% for cookie_js_name, cookie_config in https_termination_nginx_server_cookie_rewrite_config.items() -%}
    {% set cookie_js_bare_var_name = cookie_js_name | lower | regex_replace('[^_a-z0-9]', '_') -%}
    map $cookie_{{ cookie_js_bare_var_name }} $MAGEOPS_COOKIE_REWRITE_{{ cookie_js_bare_var_name }} { ~.+ "{{ cookie_config.rewrite }}=$cookie_{{ cookie_js_bare_var_name }}; Path=/; Max-Age={{ 60 * 60 * 24 * cookie_config.expire_days }}; Secure;"; default ''; }
{% if cookie_config.rewrite_domain|default([])|length > 0 -%}
    map $host $MAGEOPS_COOKIE_REWRITE_DOMAIN_{{ cookie_js_bare_var_name }} {
    hostnames;
{% for domain_regex, domain_name in cookie_config.rewrite_domain.items() %}
    {{ domain_regex }} "Domain={{ domain_name }};";
{% endfor %}
    default '';
}
{% endif %}

{% endfor %}
# ---  [END] Custom rewrite maps [END]  ---

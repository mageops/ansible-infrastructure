{% if vhost.extra_config | default('') %}
# ---  [BEGIN] Custom Project Config [BEGIN]  ---
{{ vhost.extra_config | default('') }}
# ---  [END] Custom Project Config [END]  ---
{% endif %}

{% set vhost_id = vhost.name | trim | lower | regex_replace('[^a-z0-9]+', '_') %}

{% macro ssl_config(vhost) %}
    listen 443 ssl http2;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:mageops:20m;
    ssl_session_tickets off;
    add_header Strict-Transport-Security "max-age=63072000" always;

    ssl_certificate {{ https_termination_certificate_dir }}/{{ vhost.name }}.cer;
    ssl_certificate_key {{ https_termination_private_dir }}/{{ vhost.name }}.pem;
{% endmacro %}

{% if vhost.permanent_path_redirect_map | default([]) %}
map $request_uri $perm_redirect_uri_{{ vhost_id }} {
{% for src, dst in vhost.permanent_path_redirect_map.items(): %}
    {{ src }} {{ dst }};
{% endfor %}
}
{% endif %}

{% if vhost.redirect_aliases | default(false) and vhost.aliases | default([]) %}
server {
{% if https_termination_hide_varnish %}
    listen 80;
{% endif %}

    listen 443 ssl http2;

    server_name {{ vhost.aliases | default([])|join(' ') }};

    {{ ssl_config(vhost) }}

    return 301 $scheme://{{ vhost.server_name }}$request_uri;
}
{% endif %}

server {
{% if https_termination_hide_varnish %}
    listen 80;
{% endif %}

{% if vhost.server_name != '*' %}
    server_name {{ vhost.server_name }}{% if not vhost.redirect_aliases | default(false) %} {{ vhost.aliases | default([])|join(' ') }}{% endif %};
{% endif %}

    {{ ssl_config(vhost) }}

{% if nginx_blacklist_vhost_check_include_file is defined %}
    include "{{ nginx_blacklist_vhost_check_include_file }}";
{% endif %}

{% if vhost.extra_vhost_config | default('') %}
    # ---  [BEGIN] Custom Project Server Config [BEGIN]  ---
    {% filter indent(width=4) -%}
    {{ extra_vhost_config }}
    {% endfilter %}
    # ---  [END] Custom Project Server Config [END]  ---
{% endif %}

{% if vhost.permanent_path_redirect_map | default([]) %}
    if ($perm_redirect_uri_{{ vhost_id }}) {
        return 301 $scheme://$host$perm_redirect_uri_{{ vhost_id }};
    }
{% endif %}

    location / {
        proxy_pass http://{{ https_termination_varnish_upstream }};

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Remote-Port $remote_port;

        proxy_read_timeout {{ https_termination_proxy_read_timeout }}s;
        proxy_pass_request_headers on;
        proxy_intercept_errors off;

        # As this options will rarely change, should be changed all at once and
        # are very difficult to get right we use a single variable to enable this.
        # I think we should enable this for all new projects and see how it behaves.
        # Then possible make it enabled by default. Apart from improving performance
        # with larger responses it should get rid of nginx errors when the response
        # headers are too large to fit in buffers - in this case you should enable
        # this option.
        #
        # See: https://medium.com/@getpagespeed/tuning-proxy-buffer-size-in-nginx-5c77850a012b
        {% if https_termination_nginx_increase_proxy_buffers | default(False) %}
        proxy_buffer_size       16k;
        proxy_busy_buffers_size 24k;
        proxy_buffers           32 8k;
        {% endif %}

{% if vhost.server_name != '*' %}
        include {{ nginx_serverd_dir }}/{{ vhost.server_name }}/*.conf;
{% endif %}
        include {{ nginx_serverd_defaults_dir }}/*.conf;
    }

{% if vhost.letsencrypt | default(False) %}
    location /{{ https_termination_letsencrypt_challenge_dir }}/ {
        root {{ https_termination_letsencrypt_challenge_root }}/{{ vhost.name }};
    }
{% endif %}
}
- name: Install certbot
  dnf:
    state: present
    name: certbot

- name: Compute certbot runtime facts
  set_fact:
    certbot_args_default: >-
      {{
          [ '/usr/bin/certbot', 'certonly' ]
            + certbot_args_base
            + https_termination_crt_acme_email | default(false, true) | ternary(certbot_args_email, [])
            + https_termination_crt_acme_staging | default(false, true) | ternary(
                [ '--staging' ],
                https_termination_crt_acme_directory | default(false, true) | ternary(https_termination_crt_acme_directory, [])
              )
      }}
  vars:
    certbot_args_base: [
      --non-interactive,
      --no-self-upgrade,
      --agree-tos,
      --expand,
      --renew-with-new-domains,
      --no-random-sleep-on-renew
    ]
    certbot_args_acme_server: [
      --server, "{{ https_termination_crt_acme_directory }}"
    ]
    certbot_args_email: [
      --email, "{{ https_termination_crt_acme_email }}"
    ]

- name: Ensure up-to-date nginx config
  include_role:
    name: cs.nginx
    tasks_from: 099-cleanup.yml

- name: Ensure nginx is running so it can serve the ACME challenges
  service:
    name: nginx
    state: reloaded

# - name: Run certbot for vhost
#   command:
#     argv: "{{ certbot_args_default + certbot_args_vhost }}"
#   vars:
#     certbot_args_vhost: [
#       --webroot,
#       --webroot-path,   "{{ vhost.crt_acme_webroot_dir }}",
#       --domains,        "{{ ([vhost.server_name] + vhost.server_aliases | default([], true)) | join(',') }}",
#       --cert-name,      "{{ vhost.name }}",
#       --post-hook,      "/usr/bin/systemctl reload nginx"
#     ]
#   when: vhost.crt_do_acme
#   loop: "{{ https_termination_vhosts.values() | list }}"
#   loop_control:
#     label: "{{ vhost.name }} -> {{ (certbot_args_default + certbot_args_vhost) | join(' ') }}"
#     loop_var: vhost
#   register: https_termination_certbot_run

- name: Symlink latest ACME certificates as live ones
  file:
    state: link
    src:  "{{ vhost[key.src] }}"
    dest: "{{ vhost[key.dst] }}"
  when: vhost.crt_do_acme
  vars:
    vhost: "{{ entry[0] }}"
    key: "{{ entry[1] }}"
  loop: >-
    {{
      https_termination_vhosts.values()
        | product([
            { 'src': 'crt_acme_live_fullchain_path',  'dst': 'crt_live_fullchain_path' },
            { 'src': 'crt_acme_live_key_path',        'dst': 'crt_live_key_path' },
          ])
        | list
    }}
  loop_control:
    label: "{{ vhost.name }} -> {{ vhost[key.dst] }}"
    loop_var: entry
  notify: Reload nginx

- name: Configure certbot sysconfig
  lineinfile:
    state: present
    path: /etc/sysconfig/certbot
    regexp: '^CERTBOT_ARGS='
    line: 'CERTBOT_ARGS="--allow-subset-of-names"'
    create: yes
  notify: Reload systemctl daemon

- name: Enable certbot renew timer unit
  systemd:
    state: started
    name: certbot-renew.timer
    enabled: yes
    masked: no
  notify: Reload systemctl daemon

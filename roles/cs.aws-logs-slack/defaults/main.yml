# You can also send notifications for any existing log group
# This works only for project groups which start with `/{project_name}/{env}/`
# This should be a list of dicst, each containning:
# * `group` - group name without project prefix and without leading slash
# * `filter` (optional) - string for filtering the log items
#
# Warning! Each group can have only one subcription filter, this is AWS limitation.
# You cannot use two different entries (filters) for the same group.
# The last one will override the previous one if you do it.
#
# The filter accepts special expression which you can read about here:
# https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html
#
# tl;dr To exclude phrase 'go home, you are drunk' but at the same catch phrases
# 'hello' and 'critical you can write a filter like this:
# filter: '-"go home, you are drunk" ?hello ?critical'
#
# PROTIP You can test your filters using the cloudwatch logs console, the search box
# accepts the same expressions!
#
# Example:
#
# aws_logs_slack_log_groups_extra:
#   - group: 'magento/paywithamazon.log'
#     filter: 'error'
#   - group: 'postfix/maillog'
#     filter: 'something'
aws_logs_slack_log_groups_extra: []
aws_logs_slack_log_groups_default:
    - group: "nginx/error.log"
      filter: 'FastCGI Fatal'

aws_logs_slack_log_groups_report:
    - group: "magento/report"

aws_lambda_slack_exceptions_forwarder_name: "forwardLogsToSlack-{{ mageops_app_name }}"
aws_lambda_slack_exceptions_forwarder_name_log_group_name: "/aws/lambda/{{ aws_lambda_slack_exceptions_forwarder_name }}"
aws_lambda_slack_exceptions_forwarder_runtime: "nodejs18.x"

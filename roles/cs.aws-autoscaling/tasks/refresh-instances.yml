- name: Refresh AutoScaling Group Instances
  command:
    argv: >-
      {{ [ 'aws', 'autoscaling', 'start-instance-refresh' ]
          + aws_asg_instance_refresh_cli_args_base
          + [ '--cli-input-json', aws_asg_instance_refresh_params | to_json ] }}
  vars:
    # This is rendered in template string directly on purpose
    # as otherwise ansible will pass numbers as string causing API error.
    aws_asg_instance_refresh_params: >-
      {{
          {
            "AutoScalingGroupName": autoscaling_asg_name,
            "Strategy": "Rolling",
            "Preferences": {
              "MinHealthyPercentage": autoscaling_rolling_instance_refresh_min_healthy_percent | int,
              "InstanceWarmup": autoscaling_rolling_instance_refresh_extra_warmup_grace_period | int
            }
          }
      }}
  register: aws_asg_instance_refresh_command

- name: Compute instance refresh task info
  set_fact:
    aws_asg_instance_refresh_id: "{{ ( aws_asg_instance_refresh_command.stdout | from_json ).InstanceRefreshId }}"
    aws_asg_instance_refresh_estimated_duration: >-
      {{ ( ( autoscaling_healthcheck_grace_period | int
          + autoscaling_rolling_instance_refresh_extra_warmup_grace_period | int )
              * autoscaling_asg_desired_capacity | int
              * ( autoscaling_rolling_instance_refresh_min_healthy_percent | int + 100 )
              / 100 ) | round(1, 'ceil') }}

- name: Print info about refresh id so it can be tracked
  debug:
    msg: |-
      ========================================================
      =         Started ASG rolling instance refresh!        =
      ========================================================

        Group: {{ autoscaling_asg_name }}

        Operation id: {{ aws_asg_instance_refresh_id }}
        Est. duration: {{ aws_asg_instance_refresh_estimated_duration }} sec
        Desired capacity: {{ autoscaling_asg_desired_capacity }} instances

        Healthcheck grace period: {{ autoscaling_healthcheck_grace_period }} sec
        Extra warmup grace period: {{ autoscaling_rolling_instance_refresh_extra_warmup_grace_period }} sec

        Min. healthy: {{ autoscaling_rolling_instance_refresh_min_healthy_percent }} % of instances

        ---------------------------------------------------

        TIP: Use this shell script to check the status live:

        while sleep 3s ; do aws autoscaling describe-instance-refreshes \
          --auto-scaling-group-name {{ autoscaling_asg_name }} \
          --instance-refresh-ids {{ aws_asg_instance_refresh_id }} \
          | jq -r '.InstanceRefreshes | first | ( [ "[\(now | strftime("%X"))]",
             "\(.Status) |", "Refresh \(.AutoScalingGroupName) ASG",
            "- \(.PercentageComplete)% complete", "/ \(.InstancesToUpdate) left",
            ( if .StatusReason then "(\(.StatusReason))" else "" end ) ] | join(" "))'; \
        done

      ========================================================

- name: Wait for the rolling Instance Refresh to complete
  command:
    argv: >-
      {{ [ 'aws', 'autoscaling', 'describe-instance-refreshes' ]
          + aws_asg_instance_refresh_cli_args_base
          + [ '--cli-input-json', aws_asg_instance_describe_refresh_params | to_json ] }}
  vars:
    aws_asg_instance_describe_refresh_params:
      AutoScalingGroupName: "{{ autoscaling_asg_name }}"
      InstanceRefreshIds: [ "{{ aws_asg_instance_refresh_id }}" ]
    aws_asg_instance_describe_data: >-
      {{ ( aws_asg_describe_instance_refresh_command.stdout
            | default('{"Status": null, "PercentageComplete": -1}')
            | from_json ).InstanceRefreshes | first }}
  register: aws_asg_describe_instance_refresh_command
  until: >-
    aws_asg_describe_instance_refresh_command is not failed
    and aws_asg_instance_describe_data.PercentageComplete | default(0, true) | int == 100
      and aws_asg_instance_describe_data.Status == 'Successful'
  delay: "{{ aws_asg_instance_refresh_progress_check_interval }}"
  retries: >-
    {{ ( aws_asg_instance_refresh_progress_check_timeout | int
          / aws_asg_instance_refresh_progress_check_interval | int ) | int }}

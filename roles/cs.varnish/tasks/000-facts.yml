- name: Print configured varnish service params
  debug:
    msg: |
      =============================================
      =        Varnish service parameters         =
      =============================================

      {{ varnish_params | to_nice_yaml }}

- name: Get Varnish backends - running EC2 app instances (AWS)
  block:
    - name: Get VPC IP addresses of backend app instances
      delegate_to: localhost
      become: no
      ec2_instance_info:
        region: "{{ aws_region }}"
        filters: "{{ varnish_backend_instances_filter_base | combine(varnish_backend_instances_aws_tags | prefix_keys('tag:')) }}"
      register: _varnish_backends_ec2_instance_info

    - name: Set Varnish backend instances if any are running (AWS)
      set_fact:
        varnish_backend_instances_app: "{{ _varnish_backends_ec2_instance_info.instances }}"
      when: _varnish_backends_ec2_instance_info.instances | length > 0
  when: varnish_standalone and aws_use

- name: Check if throttling shall be enabled
  set_fact:
    varnish_throttling_enabled: "{{ (varnish_standalone and varnish_throttling and varnish_throttling_rules | length > 0)|bool }}"

- name: Collect all app hosts for allowed origins
  block:
    - name: Collect main Magento installation host
      set_fact:
        varnish_media_cors_allowed_origins: "{{ [magento_hostname] }}"
    - name: Collect hosts from HTTPS termination configuration
      set_fact:
        varnish_media_cors_allowed_origins: |
          {{
              varnish_media_cors_allowed_origins +
              https_termination_hosts | default([])|selectattr('server_name', 'defined')|map(attribute='server_name')|list +
              https_termination_hosts | default([])|selectattr('aliases', 'defined')|map(attribute='aliases')|list | flatten
          }}
      when: mageops_https_termination_enable | default(false)
  when: varnish_media_cors_allowed_origins is not defined


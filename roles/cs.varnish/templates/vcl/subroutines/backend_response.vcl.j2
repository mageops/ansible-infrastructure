set beresp.grace = 3d;

if (beresp.http.content-type ~ "text") {
    set beresp.do_esi = true;
}

if (bereq.url ~ "\.js(\?.*)?$" || beresp.http.content-type ~ "text") {
    set beresp.do_gzip = true;
}

# Cache 404 and 301 for configured time
if(beresp.status == 404) {
    set beresp.ttl = {{ varnish_404_cache_time }};
} elsif(beresp.status == 301) {
    set beresp.ttl = {{ varnish_301_cache_time }};
# cache only 200 and 204 for 24h
} elsif (beresp.status != 200 && beresp.status != 204) {
    set beresp.ttl = 0s;
    set beresp.uncacheable = true;
    return (deliver);
}
if (beresp.http.Cache-Control ~ "private") {
    set beresp.uncacheable = true;
    set beresp.ttl = 86400s;
    return (deliver);
}

if (beresp.http.X-Magento-Debug) {
    set beresp.http.X-Magento-Cache-Control = beresp.http.Cache-Control;
}

if (bereq.url ~ "^/static/.*$") {
    # do_esi is needed here as workaround to disable chunked transfer that
    # disable content-length header that allows cloudfront to cache incomplete content
    set beresp.do_esi = true;

    # Do not cache static files without size or empty
    if (! beresp.http.Content-Length || beresp.http.Content-Length == "0") {
        set beresp.http.Cache-Control = "no-cache";
        set beresp.ttl = 0s;
        set beresp.uncacheable = true;
        set beresp.do_gzip = true;
        return (deliver);
    }
}


# validate if we need to cache it and prevent from setting cookie
if (beresp.ttl > 0s && (bereq.method == "GET" || bereq.method == "HEAD")) {
    unset beresp.http.set-cookie;
}

# If page is not cacheable then bypass varnish for 2 minutes as Hit-For-Pass
if (beresp.ttl <= 0s ||
    beresp.http.Surrogate-control ~ "no-store" ||
    (!beresp.http.Surrogate-Control && beresp.http.Vary == "*")) {
    # Mark as Hit-For-Pass for the next 2 minutes
    set beresp.ttl = 120s;
    set beresp.uncacheable = true;
}

# Magento sets max-age to the same value as s-max-age for html pages.
# We want a short max-age so browser does not cache it only varnish.
# Detect publicly cacheable HTML pages and rewrite maxage to 1 minute in vcl_deliver.
if (beresp.http.Cache-Control ~ "public" && beresp.http.Content-Type ~ "text/html") {
   set beresp.http.X-Rewrite-HTML-Maxage = 1;
}

set beresp.http.X-Cached-At = now;

return (deliver);

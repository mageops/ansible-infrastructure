{#
 !WARNING! When using new variables here add them to step "Set varnish backend template vars" in file:
 roles/cs.aws-varnish-lambda/tasks/main.yml
#}

probe app_probe {
	.request =
		"HEAD {{ varnish_backend_probe_endpoint }} HTTP/1.1"
		"Host: localhost"
		"Connection: close";
	.interval = 1s;
	.timeout = 1s;
	.threshold = 2;
	.window = 3;
}

{% if varnish_dns_backend_domain %}
import dynamic;

acl allowed_backends {
    {% for addr in varnish_dns_acl %}
	"{{ addr }}";
	{% endfor %}
}

backend dummy {
    .host = "0.0.0.0";
	.max_connections = 0;
}

sub backends_init {
	new app_director = dynamic.director(
		whitelist = allowed_backends,
		domain_usage_timeout = 15m,
		probe = app_probe,
		ttl = 10s
	);
}

sub vcl_backend_error {
	# the director may resolve ::1 first
	return (retry);
}
{% else %}

{% for instance in (varnish_backend_instances_app + varnish_backend_instances_extra) %}
backend {{ instance.instance_id | replace('-','') }} {
    .host = "{{ instance.private_ip_address }}";
    .port = "{{ varnish_backend_port }}";
	.max_connections = {{ varnish_backend_max_conns }};
	.probe = app_probe;
	.first_byte_timeout     = {{ varnish_backend_first_byte_timeout }};    # How long to wait before we receive a first byte from our backend?
	.connect_timeout        = 5s;      # How long to wait for a backend connection?
	.between_bytes_timeout  = 60s;     # How long to wait between bytes received from our backend?
}
{% endfor %}

sub backends_init {
	new app_director = directors.round_robin();
{% for instance in varnish_backend_instances_app %}
	app_director.add_backend({{ instance.instance_id | replace('-','') }});
{% endfor %}

	new extra_director = directors.round_robin();
{% for instance in varnish_backend_instances_extra %}
	extra_director.add_backend({{ instance.instance_id | replace('-','') }});
{% endfor %}
}
{% endif %}

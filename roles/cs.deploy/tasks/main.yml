- import_tasks: 01-register-variables.yml
  when: deploy_install_new_release

- name: Perform crucial deploy tasks
  block:
    - import_tasks: 02-setup-deploy-user.yml
      when: deploy_install_new_release

    - include_tasks: hook/hook-actions.yml
      vars:
        deploy_hook_name: "Pre install"
        deploy_hook_actions: "{{ deploy_pre_actions }}"
      when: deploy_pre_actions | length

    - import_tasks: 03-install-artifact.yml
      when: deploy_install_new_release

    - import_tasks: 04-link-shared-dirs.yml
      when: deploy_install_new_release

    - import_tasks: 05-ensure-permissions.yml
      when: deploy_install_new_release

    - include_tasks: hook/hook-actions.yml
      vars:
        deploy_hook_name: "Post install"
        deploy_hook_actions: "{{ deploy_install_actions }}"
      when: deploy_install_actions | length
      
  always:
    - import_tasks: 06-cleanup-post-install.yml
      when: deploy_install_new_release
      
    - include_tasks: hook/hook-actions.yml
      vars:
        deploy_hook_name: "Custom cleanup"
        deploy_hook_actions: "{{ deploy_cleanup_actions }}"
      when: deploy_cleanup_actions | length

  rescue:
    - import_tasks: 91-emergency-rename.yml

    - include_tasks: hook/hook-actions.yml
      vars:
        deploy_hook_name: "Emergency installation abort"
        deploy_hook_actions: "{{ deploy_abort_install_actions }}"
      when: deploy_abort_install_actions | length
      ignore_errors: true

    - set_fact:
        deploy_emergency_install_aborted: yes

- name: Force fail if install has been aborted
  fail:
    msg: "{{ deploy_post_install_abort_msg }}"
  when: deploy_emergency_install_aborted is defined and deploy_emergency_install_aborted

- name: Perform release deploy tasks
  block:
    - import_tasks: 07-relink-releases.yml
      become: yes
      become_user: "{{ deploy_app_user }}"
      when: deploy_install_new_release

    - include_tasks: hook/hook-actions.yml
      vars:
        deploy_hook_name: "After release"
        deploy_hook_actions: "{{ deploy_release_actions }}"
      when: deploy_release_actions | length

    - import_tasks: 08-post-deploy.yml

    - include_tasks: hook/hook-actions.yml
      vars:
        deploy_hook_name: "post"
        deploy_hook_actions: "{{ deploy_post_actions }}"
      when: deploy_post_actions | length

  rescue:
    - import_tasks: 90-emergency-link-back.yml
    - import_tasks: 91-emergency-rename.yml

    - include_tasks: hook/hook-actions.yml
      vars:
        deploy_hook_name: "Emergency release abort"
        deploy_hook_actions: "{{ deploy_abort_release_actions }}"
      when: deploy_abort_release_actions | length
      ignore_errors: true

    - set_fact:
        deploy_emergency_release_aborted: yes

- name: Force fail if release has been aborted
  fail:
    msg: "{{ deploy_post_release_abort_msg }}"
  when: deploy_emergency_release_aborted is defined and deploy_emergency_release_aborted




- name: Set list of AMI/LC ids to_keep
  set_fact:
    _aws_ec2_cleanup_ami_ids_to_keep: "{{ _aws_ec2_cleanup_lcs_to_keep | map(attribute='image_id')|list | unique }}"

- debug:
    msg: "Keeping {{ _aws_ec2_cleanup_lc_ids_to_keep | count }}"

- debug:
    msg: "Keeping {{ _aws_ec2_cleanup_ami_ids_to_keep | count }} AMIs: {{ _aws_ec2_cleanup_ami_ids_to_keep | join(', ') }}"

- name: Get list of App AMIs
  ec2_ami_info:
    region: "{{ aws_region }}"
    owner: self
    filters: "{{ aws_tags_base | prefix_keys('tag:') | combine(aws_tags_role_app_filter) }}"
  vars:
    aws_tags_role_app_filter: "{{ aws_tags_role_app | prefix_keys('tag:') }}"
  register: _aws_ec2_cleanup_env_amis

- name: "Remove AMIs not longer required"
  ec2_ami:
     region: "{{ aws_region }}"
     state: absent
     delete_snapshot: yes
     image_id: "{{ item.image_id }}"
  with_items: "{{ _aws_ec2_cleanup_env_amis.images }}"
  when:
    - item is not skipped
    - item.image_id not in _aws_ec2_cleanup_ami_ids_to_keep

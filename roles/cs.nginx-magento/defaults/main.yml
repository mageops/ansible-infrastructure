nginx_app_port: 8080

nginx_cron_htpasswd_file: "{{ nginx_etc_dir }}/htpasswd"
nginx_site_htpasswd_file: "{{ nginx_etc_dir }}/sitepasswd"

nginx_magento_mode: "{{ magento_mode | default('production') }}"

nginx_fcgi_upstream_conf_file: "{{ nginx_confd_dir }}/000-php-fpm-upstream.conf"
nginx_fcgi_read_timeout: '600s'
nginx_fcgi_connect_timeout: '600s'
nginx_fcgi_backend_socket: '/var/run/php-fpm/backend.sock'
nginx_fcgi_backend_debug_socket: "{{ nginx_fcgi_backend_socket }}"

# Template files are configurable in case per-project overrides are needed
# NOTE: Overriding core configs in project is strongly discouraged
# as this often will cause non-trivial regressions when any of these
# configs is modified here and not updated in project.
nginx_magento_fastcgi_pass_template: magento_fastcgi_pass.conf.j2
nginx_magento_fastcgi_params_template: magento_fastcgi_params.conf.j2
nginx_magento_server_body_template: magento_server_body.conf.j2
nginx_magento_vhost_template: magento_vhost.conf.j2
nginx_magento_fcgi_upstream_template: magento_upstream.conf.j2

# These are optional config partials that are explicitly included
nginx_magento_fastcgi_pass_include_path: "{{ nginx_included_dir }}/magento_fastcgi_pass"
nginx_magento_fastcgi_params_include_path: "{{ nginx_included_dir }}/magento_fastcgi_params"
nginx_magento_server_body_include_path: "{{ nginx_included_dir }}/magento_server_body"

# Old variable names kept for compatibility with custom templates in projects
nginx_magento_fastcgi_params_conf_path: "{{ nginx_magento_fastcgi_params_include_path }}"
nginx_magento_server_body_conf_path: "{{ nginx_magento_server_body_include_path }}"

# These are nginx configs that are *automatically* included.
# NOTE: Order is often important thus numeric file name prefixes
# are used to ensure it as nginx loads includes in alphabetical order.
nginx_magento_vhost_conf_path: "{{ nginx_confd_dir }}/050-vhost-magento.conf"
nginx_magento_fcgi_upstream_conf_path: "{{ nginx_confd_dir }}/010-magento-fastcgi-upstream.conf"

# Can be `website` or `store` depending on what do you want to switch.
# Warning! Store means actually means "store view", so you should use store view codes with this setting.
nginx_magento_run_type: no

# Mapping hostname => store/website code.
nginx_mage_run_code_map: {}

# Which code to use when no host matches.
nginx_mage_default_run_code: no

# A dictionary of paths which produces 301 redirects in the form key => value
nginx_custom_redirects: {}

# Debug mode trigger configuration
nginx_debug_request_token: ~
nginx_debug_request_query_param_name: ___nginx_debug_token___
nginx_debug_request_cookie_name: __nginx_debug_token___
nginx_debug_request_header_name: X-NGINX-Debug-Token
nginx_debug_request_info_header_name: X-NGINX-Debug-Info


# Note: For performance reasons the buffer sizes must be aligned to (be a multiple
# of) the system page size which can be safely assumed to be 8k.
#
# Following two settings are assigned to `fastcgi_buffers` param effectively
# controlling the maximum total size of fcgi upstream response read buffers.
# The total size is roughly equal to the product of both values `chunk_count * chunk_size`.
# See: http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers
nginx_magento_fastcgi_buffers_chunk_count: 16
nginx_magento_fastcgi_buffers_chunk_size: 256k

# This setting is assigned to `fastcgi_buffer_size` parameter which confusingly
# controls the size of the buffer that is allocated *initially* when FCGI response
# is processed. This buffer - among others - holds the response HTTP headers, so
# it might need to be increased in case of 'too big header' errors.
#
# Caution: This value does not allocate a separate buffer, this buffer is allocated
# from the pool configured above. This value must be smaller than the max buffer size.
# See: http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size
nginx_magento_fastcgi_buffers_head_size: 256k



# This will not be added if there's no central varnish (e.g. varnish as lb)
- name: Add varnish configuration for core_config if needed
  vars:
    _extra_items:
    - name: Set varnish URI for warmup crawler
      path: "cache_warmer_crawler/general/varnish_uri"
      value: "{% if magento_varnish_host %}http://{{ magento_varnish_host }}:{{ magento_varnish_port }}{% endif %}"
  set_fact:
    magento_core_config_settings: "{{ magento_core_config_settings + _extra_items }}"
  when: magento_varnish_host | default(false, true)

- name: Ensure core config database settings values
  delegate_to: localhost
  become: no
  community.mysql.mysql_query:
    login_db: "{{ mageops_app_mysql_db }}"
    login_host: "{{ mageops_mysql_host }}"
    login_user: "{{ mageops_app_mysql_user }}"
    login_password: "{{ mageops_app_mysql_pass }}"
    query: |
      INSERT INTO `core_config_data`
      SET
        path = "{{ magento_db_setting.path | quote }}",
        value = "{{ magento_db_setting.value | quote }}",
        scope_id = 0,
        scope = "default"
      ON DUPLICATE KEY UPDATE
        value = "{{ magento_db_setting.value | quote }}"
  when: not magento_db_setting.default | default(false) and magento_db_setting.value | default(false) is string and magento_db_setting.enabled | default(true)
  loop: "{{ magento_core_config_settings }}"
  loop_control:
    loop_var: magento_db_setting

- name: Ensure core config database default values (no update if exists)
  delegate_to: localhost
  become: no
  community.mysql.mysql_query:
    login_db: "{{ mageops_app_mysql_db }}"
    login_host: "{{ mageops_mysql_host }}"
    login_user: "{{ mageops_app_mysql_user }}"
    login_password: "{{ mageops_app_mysql_pass }}"
    query: |
      INSERT IGNORE INTO `core_config_data`
      SET
        path = "{{ magento_db_setting.path | quote }}",
        value = "{{ magento_db_setting.value | quote }}",
        scope_id = 0,
        scope = "default"
  when: magento_db_setting.default | default(false) and magento_db_setting.value | default(false) is string and magento_db_setting.enabled | default(true)
  loop: "{{ magento_core_config_settings }}"
  loop_control:
    loop_var: magento_db_setting

- name: Ensure core config database settings are absent (defaults are used)
  delegate_to: localhost
  become: no
  community.mysql.mysql_query:
    login_db: "{{ mageops_app_mysql_db }}"
    login_host: "{{ mageops_mysql_host }}"
    login_user: "{{ mageops_app_mysql_user }}"
    login_password: "{{ mageops_app_mysql_pass }}"
    query: |
      DELETE FROM core_config_data
      WHERE
        path = "{{ magento_db_setting_path | quote }}"
  loop: "{{ magento_core_config_settings_to_remove }}"
  loop_control:
    loop_var: magento_db_setting_path

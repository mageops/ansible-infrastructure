- name: Force production Magento mode override
  when: magento_configure_for_production and magento_mode != 'production' 
  block:
    - name: Inform about Magento production mode override
      debug:
        msg: |
          ===================================================
          ==  Warning! Incompatible Magento Mode Override  ==
          ===================================================

          Incompatible `magento_mode` value: {{ magento_mode }}

          Setting `magento_configure_for_production` is enabled
          which will force override to 'production' mode.

    - name: Force production Magento mode configuration variable
      set_fact:
        magento_mode: production

# This step shall gather, normalize and extend any configuration
# that should be ready for the next ones.
- name: Configure magepack JS bundling task hook
  block:
    - name: Configure deploy for bundling
      block:
        - name: Create bundling configs
          set_fact:
            magento_magepack_js_bundling_task:
              name: "magesuite-magepack-bundle"
              image: "mageops/magesuite-magepack"
              workdir: "{{ magento_release_dir }}"
              commandline: ""
              container_workdir: "/workdir"
              user: "{{ magento_uid }}:{{ magento_gid }}"
              # If magepack fails, it should keep magento in working condition
              # we want to continue deployment even if magepack couldn't succeed
              ignore_error: yes

        - name: Append the bundling task config to the task list
          set_fact:
            magento_scd_containerized_tasks: "{{ magento_scd_containerized_tasks + [magento_magepack_js_bundling_task] }}"

  when: magento_scd_advanced_js_bundling and magento_scd_advanced_js_bundling_strategy == 'magepack'

- name: Configure baler JS bundling task hook
  block:
    - name: Configure deploy for bundling
      block:
        - name: Create bundling configs
          set_fact:
            magento_baler_js_bundling_task:
              name: "magesuite-baler-bundle"
              image: "mageops/magesuite-baler:v0.1.1"
              workdir: "{{ magento_release_dir }}"
              commandline: ""
              container_workdir: "/workdir"
              user: "{{ magento_uid }}:{{ magento_gid }}"

            magento_baler_js_bundling_core_config:
              - name: Enable baler bundling
                path: "dev/js/enable_baler_js_bundling"
                value: "1"
              - name: Disable JS merging (because baler bundling is enabled)
                path: "dev/js/merge_files"
                value: "0"
              - name: Disable JS minification (because baler bundling is enabled)
                path: "dev/js/minify_files"
                value: "0"
              - name: Disable JS bundling (baler bundling is enabled)
                path: "dev/js/enable_js_bundling"
                value: "0"
              - name: Disable MageSuite JavaScript defer.
                path: "deferjs/general/active"
                value: "0"

        - name: Append the bundling task config to the task list
          set_fact:
            magento_scd_containerized_tasks: "{{ magento_scd_containerized_tasks + [magento_baler_js_bundling_task] }}"

        - name: Ensure that Magento's js minification, merging and bundling is disabled
          set_fact:
            magento_core_config_settings: "{{ magento_core_config_settings + magento_baler_js_bundling_core_config }}"
  when: magento_scd_advanced_js_bundling and magento_scd_advanced_js_bundling_strategy == 'baler'

- name: Install required python modules
  yum:
    # Required for the `mysql_query` module
    name: python2-PyMySQL
    state: present
- name: Get EC2 instance information for nodes
  ec2_instance_info:
    region: "{{ aws_region }}"
    filters: "{{ aws_node_facts_base_filters | combine(aws_node_facts_base_tags | combine(node.tags) | prefix_keys('tag:')) }}"
  loop:
    - name: shopware
      tags: "{{ aws_tags_role_shopware }}"
  loop_control:
    loop_var: node
    label: "{{ node.name }}"
  register: aws_node_instance_facts

- name: Set facts about node instances
  set_fact:
    aws_nodes_info: >-
      {{
          aws_nodes_info | default({}) | combine({
              result.node.name: result.instances | first | default(false)
          })
      }}
  loop: "{{ aws_node_instance_facts.results | default([]) }}"
  loop_control:
    loop_var: result
    label: "{{ result.node.name }}"

- name: Print info about running nodes
  debug:
    msg: "{{ item.key }} instance: {% if item.value %}{{ item.value.instance_id }} ({{ item.value.private_ip_address }} / {{ item.value.public_ip_address | default('N/A') }}){% else %}not found{% endif %}"
  loop: "{{ aws_nodes_info | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Set facts about nodes
  set_fact:
    aws_shopware_node_instance: "{{ aws_nodes_info.shopware| default(omit, true) }}"
    aws_shopware_node_ami_id: "{{ aws_nodes_info.shopware.image_id | default(omit, true) }}"
    # Ansible require at least one variable to be set in set_fact, this dummy set is required in case there is no instances present
    _dummy: "_"

- name: Find app node AMIs
  amazon.aws.ec2_ami_info:
    region: "{{ aws_region }}"
    filters: >-
      {{ ami_facts_common_filters | combine(
          ami_facts_app_node_base_filters,
          ami_facts_app_node_filters,
          ami_facts_app_node_tag_filters) }}
  vars:
    ami_facts_app_node_tag_filters: "{{ ami_facts_app_node_tags | prefix_keys('tag:') }}"
  register: ami_app_node_facts

- name: Set latest app node AMI facts if found
  when: ami_app_node_facts.images | length > 0
  block:
    - name: Set latest app node AMI info
      set_fact:
        aws_ami_app_node_info: "{{ ami_app_node_facts.images | sort(attribute='creation_date') | last }}"

    - name: Set latest app node AMI facts
      set_fact:
        aws_ami_app_node_id: "{{ aws_ami_app_node_info.image_id }}"
        aws_ami_app_node_name: "{{ aws_ami_app_node_info.name }}"
        aws_ami_app_node_location: "{{ aws_ami_app_node_info.image_location }}"
        aws_ami_app_node_needs_db_migrations: "{{ aws_ami_app_node_info.tags.NeedsDbMigrations | default('true') | from_json }}"
        aws_ami_app_node_artifact_build_nr: "{{ aws_ami_app_node_info.tags.ArtifactBuildNr | default('null') | from_json }}"

- name: Print information about newest app node AMI found
  when: ami_app_node_facts.images | length > 0
  debug:
    msg: |
      ===============================================================
      =                     Found App Node AMI                      =
      ===============================================================

      {% if ami_facts_app_node_force_id %}Note: Using forced specific AMI id.{% endif %}

      {{ aws_ami_app_node_name }} ({{ aws_ami_app_node_id }})

      Baked App artifact build: #{{ aws_ami_app_node_artifact_build_nr | default('unknown', true) }}

      {% if aws_ami_app_node_needs_db_migrations %}
      Note: App release baked into this AMI performs DB migrations!
      {% endif %}

      --- Tags ---

      {{ aws_ami_app_node_info.tags | default({}) | to_nice_yaml }}

- name: Print information if no images were found
  when: ami_app_node_facts.images | length == 0
  debug:
    msg: "No previous app node AMI was found! Clean build is coming..."

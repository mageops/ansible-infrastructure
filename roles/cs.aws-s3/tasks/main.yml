- name: Create S3 Media bucket
  when: aws_s3_media_bucket_create
  s3_bucket:
    state: present
    region: "{{ aws_region }}"
    name: "{{ aws_s3_media_bucket }}"
    tags: "{{ aws_tags_default | combine(aws_tags_role_storage, aws_tags_role_media_storage, aws_tags_role_s3_storage) }}"
  vars:
    s3_bucket_tags:
      Name: "{{ aws_s3_media_bucket }}"

- name: Create S3 Secret bucket
  s3_bucket:
    state: present
    region: "{{ aws_region }}"
    name: "{{ aws_s3_secret_bucket }}"
    tags: "{{ aws_tags_default | combine(aws_tags_role_storage, aws_tags_role_secret_storage, aws_tags_role_s3_storage) }}"
  vars:
    s3_bucket_tags:
      Name: "{{ aws_s3_secret_bucket }}"

- name: Enable CORS for Media bucket
  block:
    - name: Collect all app hosts for allowed origins
      block:
        - name: Collect main Magento installation host
          set_fact:
            aws_s3_media_bucket_cors_allowed_origins: "{{ [magento_hostname] }}"
        - name: Collect hosts from HTTPS termination configuration
          set_fact:
            aws_s3_media_bucket_cors_allowed_origins: |
              {{
                  aws_s3_media_bucket_cors_allowed_origins +
                  https_termination_hosts | default([])|selectattr('server_name', 'defined')|map(attribute='server_name')|list +
                  https_termination_hosts | default([])|selectattr('aliases', 'defined')|map(attribute='aliases')|list | flatten
              }}
          when: mageops_https_termination_enable | default(false)
        - name: Collect load balancer host
          set_fact:
            aws_s3_media_bucket_cors_allowed_origins: "{{ aws_s3_media_bucket_cors_allowed_origins + [lb_domain] }}"
          when: aws_elb_create | default(false) and lb_domain is defined and lb_domain | length
      when: aws_s3_media_bucket_cors_allowed_origins is not defined

    - name: Apply CORS configuration for Media bucket
      aws_s3_cors:
        region: "{{ aws_region }}"
        name: "{{ aws_s3_media_bucket }}"
        state: present
        rules:
          - allowed_origins: "{{ aws_s3_media_bucket_cors_allowed_origins | map('regex_replace', '^', 'https://')|list + aws_s3_media_bucket_cors_allowed_origins | map('regex_replace', '^', 'http://')|list  }}"
            allowed_headers: ['*']
            allowed_methods:
              - HEAD
              - GET
            max_age_seconds: "{{ aws_s3_bucket_media_cors_max_age }}"
  when: aws_s3_bucket_media_enable_cors and aws_s3_media_bucket_create

- import_tasks: policy.yml
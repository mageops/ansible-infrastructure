- name: Ensure rds instance-id is defined
  fail:
    msg: "Please set rds_gfs_instance_id variable"
  when: rds_gfs_instance_id is not defined

- name: Get facts about RDS instance
  community.aws.rds_instance_info:
    db_instance_identifier: "{{ rds_gfs_instance_id }}"
    region: "{{ aws_region }}"
  register: rds_gfs_instance_data

- name: Ensure instance exists
  fail:
    msg: "Could not find RDS instance {{ rds_gfs_instance_id }}"
  when: rds_gfs_instance_data.instances | count < 1

- name: Set cluster id (if db is in cluster) and snapshot name
  set_fact:
    rds_gfs_cluster_id: "{{ rds_gfs_instance_data.instances[0].db_cluster_identifier | default(false) }}"
    rds_gfs_snapshot_name: "{{ rds_gfs_cluster_id | default(rds_gfs_instance_id) }}-gfs"

- name: Set snapshot identifiers
  set_fact:
    rds_gfs_daily_snapshot_id: "{{ rds_gfs_snapshot_name }}-daily-{{ ansible_date_time.date }}"
    rds_gfs_weekly_snapshot_id: "{{ rds_gfs_snapshot_name }}-weekly-{{ ansible_date_time.date }}"
    rds_gfs_monthly_snapshot_id: "{{ rds_gfs_snapshot_name }}-monthly-{{ ansible_date_time.date }}"
    rds_gfs_daily_snapshot_tags:
        - Key: GfsType
          Value: daily
        - Key: GfsInstanceId
          Value: "{{ rds_gfs_instance_id }}"
    rds_gfs_weekly_snapshot_tags:
        - Key: GfsType
          Value: weekly
        - Key: GfsInstanceId
          Value: "{{ rds_gfs_instance_id }}"
    rds_gfs_monthly_snapshot_tags:
        - Key: GfsType
          Value: monthly
        - Key: GfsInstanceId
          Value: "{{ rds_gfs_instance_id }}"

- import_tasks: single-db.yml
  when: not rds_gfs_cluster_id

- import_tasks: cluster-db.yml
  when: rds_gfs_cluster_id != False

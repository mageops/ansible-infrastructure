# -*- mode: ruby -*-

ENV["LC_ALL"] = "en_US.UTF-8"

unless Vagrant.has_plugin?("vagrant-disksize")
    raise  Vagrant::Errors::VagrantError.new, "vagrant-disksize plugin is missing. Please install it using 'vagrant plugin install vagrant-disksize' and rerun 'vagrant up'"
end

Vagrant.require_version ">= 2.0.1"
Vagrant.configure("2") do |config|
  config.vm.hostname = "raccoon"
  config.disksize.size = '100GB'

  {# If building a base box for distribution then leave the default insecure
   # vagrant keys on the machine. Otherwise replace them with generated ones,
   # which will be too replaced during further provisioning. #}
  config.ssh.insert_key = {{ cs_vagrant_distributable_box|ternary('false', 'true') }}
  config.ssh.forward_agent = true
  config.vm.box_check_update = false
  config.vm.network "private_network", ip: "{{ cs_vagrant_vm_private_ip }}"
  config.vm.box = "{{ cs_vagrant_vm_box }}"
  # Do not sync any folders, we use unison directly for custom project sync
  config.vm.synced_folder '.', '/vagrant', disabled: true

{% if cs_vagrant_vm_box_url %}
  config.vm.box_url = "{{ cs_vagrant_vm_box_url }}"
{% endif %}
  config.vm.provider :virtualbox do |vb|
    vb.gui = false
    vb.name = "{{ cs_vagrant_vm_name }}"
    vb.memory = {{ cs_vagrant_vm_memory }}
    vb.cpus = {{ cs_vagrant_vm_cpus }}

    # We don't need audio and it causes excessive CPU usage in some cases
    vb.customize ["modifyvm", :id, "--audio", "none"]

{% if cs_vagrant_vm_cpu_cap and not cs_vagrant_distributable_box %}
    vb.customize ["modifyvm", :id, "--cpuexecutioncap", "{{ cs_vagrant_vm_cpu_cap }}"]
{% endif %}

{% if cs_vagrant_vm_enable_cd %}
    # Empty CD drive for optional Guest Additions Installation
    vb.customize ["storageattach", :id, 
                  "--storagectl", "IDE", 
                  "--port", "0", "--device", "1", 
                  "--type", "dvddrive", 
                  "--medium", "emptydrive"]
{% endif %}
  end

{% if cs_vagrant_vm_enable_public_network and not cs_vagrant_distributable_box %}
  # Bridge to public network, this is unsecure if not in a trusted LAN!
  # TODO: Find a better method for getting adapter names
  config.vm.network "public_network", bridge: [
      "en0: Wi-Fi (AirPort)",
      "en1: Wi-Fi (AirPort)",
  ]
{% endif -%}
  config.vm.post_up_message = <<EOF_UP_MSG
         ____
        / __ \\____ _______________  ____  ____
       / /_/ / __ `/ ___/ ___/ __ \\/ __ \\/ __ \\
      / _, _/ /_/ / /__/ /__/ /_/ / /_/ / / / /
     /_/ |_|\\__,_/\\___/\\___/\\____/\\____/_/ /_/

                            waved at you

creativestyle development environment for MageSuite
EOF_UP_MSG
end
